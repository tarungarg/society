c
n
s
c
lambda { |user| true }
c
user
c
q
user
block
pp &block
&block
c
request.session[:user_id]
c
request.subdomain.blank? || request.subdomain == domain
request.subdomain.blank?
domain
request.subdomain
q
Tenant.currentq
Tenant.current
q
@member.tenant_id = q
@member.tenant
@member.teant
@member
    Tenant.find_by(domain: request.subdomain) unless main_domain?
    Tenant.find_by_url(request.subdomain) unless main_domain?
current_tenant
current_account
member_params
c
resource.tenant
resource.tenant_domain
c
qc
q
request.subdomain
q
resource.tenant_domain
resource.tenant_name
resource
c
q
current_user
current
user_signed_in?
user_signed_in?%
c
resource.tenant.domain
c
self.tenant
q
Tenant.all.map(&:domain)
Tenant.map(&:domain)
self.tenant
self
q
self.tenantq
self.tenant
q
self.tenant
self.society_profile
self.profile
c
Tenant.find_by(domain: 'xxxxx')
self.tenant
self
c
Tenant.where(domain: 'ffff').first
Tenant.where(domain: 'ffff').fist
Tenant.where(domain: 'ffff')
Tenant.find_by(domain: 'ffff')
Tenant.order('id desc')
Tenant.last(2).order('id desc')
Tenant.last(2).order('desc')
Tenant.last(-2)
self.tenant
self.tenatn
self
user
tenat
q
tenant
q
Tenant.find_by(domain: 'ccccc')
Tenant.last
Tenant.all
self.tenant.domain
self.tenant
self
tenant.domain
q
resource.tenant
resource
q
resource.tenant
resource
c
request.subdomain
request
c
domain
c
domain
c
Apartment::Tenant.create(domain)
domain
c
selfc
self
c
domain
q
domain
c
q
self.tenant
self.society_profile
self
q
self.tenant
self.society_profile
self
q
selfq
q
self
q
self
q
self
subdomain
q
selfq
self
subdomain
c
subdomain
user
params
